{
  "action": {
    "down": "down",
    "left": "left",
    "right": "right",
    "up": "up",
		"noFormula": "This action has not been calculated yet"
  },
  "creator": {
    "alg": "Generator",
    "braid": "Braid",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "connectivity": "Connectivity",
    "constraints": {
			"goals":"Goals",
			"traps":"Traps",
      "unambiguous": "Unambiguous Policy",
			"unambiguousHint": "the policy recommends only one action for each tile",
      "connected": "Fully Connected",
			"connectedHint": "all tiles can be reached",
      "dangerous": "Dangerous",
			"dangerousHint": "a trap can be reached from all tiles",
      "deadEnds": "Dead Ends",
			"deadEndsHint": "the world contains dead ends",
      "lost": "Lost",
			"lostHint": "all tiles have a negative value",
			"partiallyDangerous": "Partially Dangerous",
			"partiallyDangerousHint": "a trap can be reached from some tiles",
      "partiallyLost": "Partially Lost",
			"partiallyLostHint": "some tiles have a negative value",
      "partiallySurvivable": "Partially Survivable",
			"partiallySurvivableHint": "a goal can be reached from some tiles",
      "partiallyWinnable": "Partially Winnable",
			"partiallyWinnableHint": "some tiles have a positive value",
      "survivable": "Survivable",
			"survivableHint": "a goal can be reached from all tiles",
      "trivial": "Trivial Policy",
			"trivialHint": "the policies recommendation is equivalent to the path to the nearest goal",
      "winnable": "Winnable",
			"winnableHint": "all tiles have positive value",
			"required": "require",
			"optional": "optional",
			"forbidden": "forbid"
    },
    "dfs": "Recursive Backtracking",
    "goals": "Goals",
    "height": "Height",
    "kruskal": "Kruskal",
    "random": "Random",
    "refresh": "Refresh",
		"tab": {
			"basic": "Basic",
			"generator": "Generator",
			"constraints": "Constraints"
		},
		"quickGenerators": {
			"perfect": "Perfect Labyrinth",
			"perfectHint": "contain no circular paths",
			"braid": "Braided Labyrinth",
			"braidHint": "contain no dead ends",
			"unicursal": "Single Path",
			"unicursalHint": "contain no intersections",
			"erdos": "Erdős–Rényi",
			"erdosHint": "randomly select edges to add",
			"white": "White Noise",
			"whiteHint": "each tile is equally likely to be a path",
			"whiteBlur": "Blurred Noise",
			"whiteBlurHint": "applies a gausian blur to white noise",
			"perlin": "Perlin Noise",
			"perlinHint": "neighboring tiles are more likely to be similar",
			"fractal": "Fractal Noise",
			"fractalHint": "uses multiple noise functions (better suited to large worlds)"
		},
    "title": "Create new level",
    "traps": "Traps",
    "unic": "Unicursal",
    "width": "Width",
		"noiseGen": "Noise Generator",
		"frequency": "Frequency",
		"fractal": "Fractal",
		"blur": "Blur",
		"bias": "Bias",
		"kernel": "Kernel",
		"octaves": "Octaves",
		"fractalFrequency": "Frequency",
		"persistence": "Persistence",
		"messages":  {
			"unsatisfiedConstraint": "the following constraints could not be satisfied: {failed}. Please review your choices or try using a different Generator",
			"failure": "failed to generate a new world",
			"minimumGoals": "the constraint {constraint} requires a minimum of {nGoals} goal(s)",
			"minimumTraps": "the constraint {constraint} requires a minimum of {nTraps} trap(s)",
			"incompatibleConstraints": "the value '{valueA}' of constraint '{nameA}' is not compatible with the value '{valueB}' of constraint '{nameB}'",
			"minimumStepCost": "the constraint {constraint} requires greater step costs"
		}
  },
  "lang": "English",
  "saver": {
    "confirm": "save",
    "nameInput": "Name",
    "namePlaceholder": "name for the level",
    "title": "Enter a name"
  },
  "selector": {
    "title": "Select a level to open it",
	"search": "Search",
	"upload": "hochladen",
	"name": "Name",
	"discount": "Discount",
	"stepCost":" Step Cost",
	"width": "Width",
	"height": "Height",
	"actions": "Actions",
	"preview": "Preview",
	"confirm": "Open",
	"message": {
		"noneSelected": "No level selected",
		"invalidFileContent": "Unable to read contents of {fileName}",
		"missingAttribute": "{fileName} is missing required information"
	}
  },
  "settings": {
    "back": "Back",
    "colorTiles": "Color Tiles",
    "darkMode": "Dark Mode",
    "discount": "Discount",
    "front": "Front",
    "height": "Tile Height",
    "lang": "Language",
    "left": "Left",
    "noise": "Noise",
    "reset": "Reset",
    "right": "Rright",
    "scWarning": "Step chances should sum to 1.00",
    "stepChances": "Step Chances",
    "stepCost": "Step Cost",
    "title": "Settings",
    "ui": "UI",
    "useRounded": "Use Rounded",
    "width": "Tile Width",
    "zoom": "Zoom"
  },
  "solution": {
		"title": "Solution",
    "back": "Back",
    "download": "Download",
    "iteration": "Iteration",
		"previewLimit": "For perfomance reasons only 25 Iterations can be displayed in this preview",
		"tip": {
			"download": "Download",
			"copy": "Copy to clipboard"
		}
  },
  "tileEditor": {
    "accessible": "accessible",
    "actions": "Actions",
    "free": "free",
    "goal": "goal",
    "initial": "initial",
    "reward": "Reward",
    "terminal": "terminal",
    "tip": {
      "reward": "Reward (scroll to change)"
    },
    "title": "Editing Tile {id}",
    "trap": "trap",
    "wall": "wall"
  },
  "toolbar": {
    "displayMode": "Display Mode",
    "modeDetail": "Detail",
    "modePolicy": "Policy",
    "modeValues": "Values",
    "new": "new",
    "reached": "Reached",
    "tip": {
      "iter": "Iteration (scroll to advance)",
      "new": "create new level",
      "nextIter": "next Iteration",
      "open": "open level",
      "prevIter": "previous Iteration",
      "reached": "shows tiles calculated in the next iteration",
      "renderMode": "choose display mode",
      "reset": "reset level and policy",
      "save": "save level",
      "solution": "show solution"
    },
    "title": "MDP Q-Value-Propagation",
		"message": {
			"close": "OK",
			"modeDisabled": "This mode is not available at the current tile size"
		}
  }
}